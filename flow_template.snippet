<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>flow_template</Title>
			<Shortcut>FlowTemplate</Shortcut>
		</Header>
		<Snippet>

			<Code Language="cpp">
        <![CDATA[typedef int Weight;
typedef int Flow;
struct Edge {
  int src, dest, rev;
  Flow cap;
  Weight cost;
  bool operator < (const Edge &rhs) const
  {
    return cost > rhs.cost;
  }
  Edge(int s, int d) : src(s), dest(d) { ; }
  Edge(int s, int d, int c) : src(s), dest(d), cost(c) { ; }
  Edge(int s, int d, int r, Flow cp, Weight cst) : src(s), dest(d), rev(r), cap(cp), cost(cst) { ; }
};
typedef vector<Edge> Edges;
typedef vector<Edges> Graph;
typedef vector<Weight> Array;
typedef vector<Array> Matrix;
void add_edge(Graph &g, int src, int dest, Flow cap)
{
  g[src].push_back(Edge{ src, dest, (int)g[dest].size(), cap, 0 });
  g[dest].push_back(Edge{ dest, src, (int)g[src].size() - 1, 0, 0 });
}

void add_edge(Graph &g, int from, int to, Flow cap, Weight cost)
{
  g[from].push_back(Edge(from, to, (int)g[to].size(), cap, cost));
  g[to].push_back(Edge(to, from, (int)g[from].size() - 1, 0, -cost));
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
